{
  "Elementor": {
    "e_content_start": {
      "scope": "php",
      "prefix": "econtentstart",
      "body": [
        "$this->start_controls_section(",
        "    'content',",
        "    [",
        "        'label' => esc_html__('', 'plugin-name')",
        "    ]",
        ");",
        "",
        "$this->end_controls_section();"
      ],
      "description": "Starts a content section in Elementor widget"
    },
    "e_style_content": {
      "scope": "php",
      "prefix": "estylecontent",
      "body": [
        "$this->start_controls_section(",
        "    'style',",
        "    [",
        "        'label' => esc_html__('', 'plugin-name'),",
        "        'tab'   => Controls_Manager::TAB_STYLE,",
        "    ]",
        ");",
        "",
        "$this->end_controls_section();"
      ],
      "description": "Starts a style section in Elementor widget"
    },
    "e_text": {
      "scope": "php",
      "prefix": "etext",
      "body": [
        "$this->add_control(",
        "    'title',",
        "    [",
        "        'label' => esc_html__( 'Title', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'Default title', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a text control for titles"
    },
    "e_text_subtitle": {
      "scope": "php",
      "prefix": "etextsubtitle",
      "body": [
        "$this->add_control(",
        "    'subtitle',",
        "    [",
        "        'label' => esc_html__( 'Subtitle', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'Default subtitle', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a text control for subtitles"
    },
    "e_text_subheading": {
      "scope": "php",
      "prefix": "etextsubheading",
      "body": [
        "$this->add_control(",
        "    'subheading',",
        "    [",
        "        'label' => esc_html__( 'Subheading', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'Default subheading', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a text control for subheadings"
    },
    "e_text_heading": {
      "scope": "php",
      "prefix": "etextheading",
      "body": [
        "$this->add_control(",
        "    'heading',",
        "    [",
        "        'label' => esc_html__( 'Heading', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'Default heading', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a text control for headings"
    },
    "e_text_headingtitle": {
      "scope": "php",
      "prefix": "etextheadingtitle",
      "body": [
        "$this->add_control(",
        "    'headingtitle',",
        "    [",
        "        'label' => esc_html__( 'Heading Title', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXTAREA,",
        "        'default' => esc_html__( 'Default heading title', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a textarea for heading titles"
    },
    "e_text_button": {
      "scope": "php",
      "prefix": "etextbutton",
      "body": [
        "$this->add_control(",
        "    'buttontext',",
        "    [",
        "        'label' => esc_html__( 'Button Text', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'Click Here', 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'buttonlink',",
        "    [",
        "        'label' => esc_html__( 'Button Link', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::URL,",
        "        'placeholder' => esc_html__( 'https://your-link.com', 'plugin-name' ),",
        "        'default' => [",
        "            'url' => '#',",
        "            'is_external' => true,",
        "            'nofollow' => true,",
        "            'custom_attributes' => '',",
        "        ],",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds button text and link controls"
    },
    "e_number": {
      "scope": "php",
      "prefix": "enumber",
      "body": [
        "$this->add_control(",
        "    'price',",
        "    [",
        "        'label' => esc_html__( 'Price', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::NUMBER,",
        "        'min' => 5,",
        "        'max' => 100,",
        "        'step' => 5,",
        "        'default' => 10,",
        "    ]",
        ");"
      ],
      "description": "Adds a number control with min/max/step"
    },
    "e_textarea": {
      "scope": "php",
      "prefix": "etextarea",
      "body": [
        "$this->add_control(",
        "    'description',",
        "    [",
        "        'label' => esc_html__( 'Description', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXTAREA,",
        "        'rows' => 10,",
        "        'default' => esc_html__( 'Default description', 'plugin-name' ),",
        "    ]",
        ");"
      ],
      "description": "Adds a textarea control for descriptions"
    },
    "e_wysi": {
      "scope": "php",
      "prefix": "ewisi",
      "body": [
        "$this->add_control(",
        "    'item_description',",
        "    [",
        "        'label' => esc_html__( 'Description', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::WYSIWYG,",
        "        'default' => esc_html__( 'Default description', 'plugin-name' ),",
        "    ]",
        ");"
      ],
      "description": "Adds a WYSIWYG editor control"
    },
    "e_select": {
      "scope": "php",
      "prefix": "eselect",
      "body": [
        "$this->add_control(",
        "    'style_design',",
        "    [",
        "        'label'     => esc_html__( 'Style', 'plugin-name' ),",
        "        'type'      => \\Elementor\\Controls_Manager::SELECT,",
        "        'default'   => 'style_one',",
        "        'options'   => [",
        "            'style_one' => esc_html__( 'Style One', 'plugin-name' ),",
        "            'style_two' => esc_html__( 'Style Two', 'plugin-name' ),",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a dropdown select control"
    },
    "e_color": {
      "scope": "php",
      "prefix": "ecolor",
      "body": [
        "$this->add_control(",
        "    'spinner_color',",
        "    [",
        "        'label' => esc_html__( 'Color', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'color: {{VALUE}} !important',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a color picker control"
    },
    "e_fontfamily": {
      "scope": "php",
      "prefix": "efontfamily",
      "body": [
        "$this->add_control(",
        "    'font_family',",
        "    [",
        "        'label' => esc_html__( 'Font Family', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::FONT,",
        "        'default' => \"'Open Sans', sans-serif\",",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'font-family: {{VALUE}}',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a font family control"
    },
    "e_date": {
      "scope": "php",
      "prefix": "edate",
      "body": [
        "$this->add_control(",
        "    'due_date',",
        "    [",
        "        'label' => esc_html__( 'Due Date', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DATE_TIME,",
        "    ]",
        ");"
      ],
      "description": "Adds a date-time picker control"
    },
    "e_repeater": {
      "scope": "php",
      "prefix": "erepeater",
      "body": [
        "$repeater = new \\Elementor\\Repeater();",
        "",
        "$repeater->add_control(",
        "    'list_title', [",
        "        'label' => esc_html__( 'Title', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::TEXT,",
        "        'default' => esc_html__( 'List Title' , 'plugin-name' ),",
        "        'label_block' => true,",
        "    ]",
        ");",
        "",
        "$repeater->add_control(",
        "    'list_content', [",
        "        'label' => esc_html__( 'Content', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::WYSIWYG,",
        "        'default' => esc_html__( 'List Content' , 'plugin-name' ),",
        "        'show_label' => false,",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'list_repeater',",
        "    [",
        "        'label' => esc_html__( 'Repeater List', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::REPEATER,",
        "        'fields' => $repeater->get_controls(),",
        "        'default' => [",
        "            [",
        "                'list_title' => esc_html__( 'Title #1', 'plugin-name' ),",
        "                'list_content' => esc_html__( 'Item content. Click the edit button to change this text.', 'plugin-name' ),",
        "            ],",
        "            [",
        "                'list_title' => esc_html__( 'Title #2', 'plugin-name' ),",
        "                'list_content' => esc_html__( 'Item content. Click the edit button to change this text.', 'plugin-name' ),",
        "            ],",
        "        ],",
        "        'title_field' => '{{{ list_title }}}',",
        "    ]",
        ");"
      ],
      "description": "Adds a repeater control for lists"
    },
    "e_tabs": {
      "scope": "php",
      "prefix": "etabs",
      "body": [
        "$this->start_controls_tabs(",
        "    'style_tabs'",
        ");",
        "",
        "$this->start_controls_tab(",
        "    'style_normal_tab',",
        "    [",
        "        'label' => esc_html__( 'Normal', 'plugin-name' ),",
        "    ]",
        ");",
        "",
        "$this->add_control();",
        "",
        "$this->end_controls_tab();",
        "$this->start_controls_tab(",
        "    'style_hover_tab',",
        "    [",
        "        'label' => esc_html__( 'Hover', 'plugin-name' ),",
        "    ]",
        ");",
        "",
        "$this->add_control();",
        "",
        "$this->end_controls_tab();",
        "",
        "$this->end_controls_tabs();"
      ],
      "description": "Adds tabs for normal/hover states"
    },
    "e_slider": {
      "scope": "php",
      "prefix": "eslider",
      "body": [
        "$this->add_responsive_control(",
        "    'icon_size',",
        "    [",
        "        'label' => esc_html__( 'Size', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::SLIDER,",
        "        'size_units' => [ 'px', '%' ],",
        "        'range' => [",
        "            'px' => [",
        "                'min' => 1,",
        "                'max' => 100,",
        "                'step' => 1,",
        "            ],",
        "            '%' => [",
        "                'min' => 1,",
        "                'max' => 100,",
        "            ],",
        "        ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .icon svg' => 'width: {{SIZE}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a slider control for sizes"
    },
    "e_margin": {
      "scope": "php",
      "prefix": "emargin",
      "body": [
        "$this->add_responsive_control(",
        "    'spinner_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds margin control with dimensions"
    },
    "e_padding": {
      "scope": "php",
      "prefix": "epadding",
      "body": [
        "$this->add_responsive_control(",
        "    'spinner_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds padding control with dimensions"
    },
    "e_link": {
      "scope": "php",
      "prefix": "elink",
      "body": [
        "$this->add_control(",
        "    'website_link',",
        "    [",
        "        'label' => esc_html__( 'Link', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::URL,",
        "        'placeholder' => esc_html__( 'https://your-link.com', 'plugin-name' ),",
        "        'default' => [",
        "            'url' => '#',",
        "            'is_external' => true,",
        "            'nofollow' => true,",
        "            'custom_attributes' => '',",
        "        ],",
        "        'label_block' => true,",
        "    ]",
        ");"
      ],
      "description": "Adds a URL control for links"
    },
    "e_image": {
      "scope": "php",
      "prefix": "eimage",
      "body": [
        "$this->add_control(",
        "    'image',",
        "    [",
        "        'label' => esc_html__( 'Choose Image', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::MEDIA,",
        "        'default' => [",
        "            'url' => \\Elementor\\Utils::get_placeholder_image_src(),",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds an image upload control"
    },
    "e_icon": {
      "scope": "php",
      "prefix": "eicon",
      "body": [
        "$this->add_control(",
        "    'spinner_icon',",
        "    [",
        "        'label' => esc_html__( 'Icon', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::ICONS,",
        "        'default' => [",
        "            'value' => 'fas fa-star',",
        "            'library' => 'solid',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds an icon picker control"
    },
    "e_box_shadow": {
      "scope": "php",
      "prefix": "eboxshadow",
      "body": [
        "$this->add_group_control(",
        "    \\Elementor\\Group_Control_Box_Shadow::get_type(),",
        "    [",
        "        'name' => 'box_shadow',",
        "        'selector' => '{{WRAPPER}} .your-class',",
        "    ]",
        ");"
      ],
      "description": "Adds a box shadow control"
    },
    "e_typography": {
      "scope": "php",
      "prefix": "etypography",
      "body": [
        "$this->add_group_control(",
        "    \\Elementor\\Group_Control_Typography::get_type(),",
        "    [",
        "        'name' => 'spinner_typography',",
        "        'selector' => '{{WRAPPER}} .title',",
        "    ]",
        ");"
      ],
      "description": "Adds typography control"
    },
    "e_border": {
      "scope": "php",
      "prefix": "eborder",
      "body": [
        "$this->add_control(",
        "    'spinner_color',",
        "    [",
        "        'label' => esc_html__( 'Card Border Color', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'border:1px solid {{VALUE}} !important',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a border color control"
    },
    "e_opacity": {
      "scope": "php",
      "prefix": "eopacity",
      "body": [
        "$this->add_control(",
        "    'border_color_timeline_opacity',",
        "    [",
        "        'label' => esc_html__( 'Border Color Opacity', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::SLIDER,",
        "        'range' => [",
        "            'min' => 0,",
        "            'max' => 1.00,",
        "        ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .hisoty-inner:before' => 'opacity: {{SIZE}}',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds an opacity slider control"
    },
    "e_background": {
      "scope": "php",
      "prefix": "ebackground",
      "body": [
        "$this->add_group_control(",
        "    \\Elementor\\Group_Control_Background::get_type(),",
        "    [",
        "        'name' => 'background',",
        "        'label' => esc_html__( 'Background', 'plugin-name' ),",
        "        'types' => [ 'classic', 'gradient', 'video' ],",
        "        'selector' => '{{WRAPPER}} .title',",
        "    ]",
        ");"
      ],
      "description": "Adds background control (classic/gradient/video)"
    },
    "e_condition": {
      "scope": "php",
      "prefix": "econdition",
      "body": [
        "'condition' => [",
        "    'style' => 'style_two'",
        "]"
      ],
      "description": "Adds a condition for control visibility"
    },
    "e_css_text": {
      "scope": "php",
      "prefix": "ecsstext",
      "body": [
        "$this->add_responsive_control(",
        "    'eael_accordion_height',",
        "    [",
        "        'label' => esc_html__( 'Height', 'plugin-name' ),",
        "        'type' => Controls_Manager::TEXT,",
        "        'default' => '400',",
        "        'description' => 'Unit in px',",
        "        'selectors' => [",
        "            '{{WRAPPER}} .eael-img-accordion ' => 'height: {{VALUE}}px;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds a custom CSS textarea control"
    },
    "e_three": {
      "scope": "php",
      "prefix": "ethree",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'spinner_typ',",
        "        'selector' => '{{WRAPPER}} .title span',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'spinner_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title span' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'spinner_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title span' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds typography, color, and margin controls"
    },
    "e_svg_icon_style": {
      "scope": "php",
      "prefix": "esvgicontogetherstyle",
      "body": [
        "$this->add_control(",
        "    'spinner_services_style_icon_color',",
        "    [",
        "        'label' => esc_html__( 'SVG Color', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .service-icon svg path' => 'fill: {{VALUE}}',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'spinner_services_style_svg_size',",
        "    [",
        "        'label' => esc_html__( 'SVG Size', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::SLIDER,",
        "        'size_units' => [ 'px' ],",
        "        'range' => [",
        "            'px' => [",
        "                'min' => 10,",
        "                'max' => 100,",
        "                'step' => 1,",
        "            ],",
        "        ],",
        "        'default' => [",
        "            'unit' => 'px',",
        "        ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .service-icon svg' => 'width: {{SIZE}}{{UNIT}};height: {{SIZE}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'spinner_services_style_icon_colorr',",
        "    [",
        "        'label' => esc_html__( 'Icon Color', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .service21-icon i' => 'color: {{VALUE}}',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'spinner_services_style_icon_size',",
        "    [",
        "        'label' => esc_html__( 'Icon Size', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::SLIDER,",
        "        'size_units' => [ 'px' ],",
        "        'range' => [",
        "            'px' => [",
        "                'min' => 10,",
        "                'max' => 100,",
        "                'step' => 1,",
        "            ],",
        "        ],",
        "        'default' => [",
        "            'unit' => 'px',",
        "        ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .service-icon i' => 'font-size: {{SIZE}}{{UNIT}}',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds SVG/icon color and size controls"
    },
    "e_attr": {
      "scope": "html",
      "prefix": "eattr",
      "body": [
        "<?php echo esc_attr__('service_image','plugin-name')?>"
      ],
      "description": "Outputs escaped attribute for translation"
    },
    "e_hr": {
      "scope": "php",
      "prefix": "ehr",
      "body": [
        "$this->add_control(",
        "    'hr',",
        "    [",
        "        'type' => \\Elementor\\Controls_Manager::DIVIDER,",
        "    ]",
        ");"
      ],
      "description": "Adds a divider control"
    },
    "e_heading": {
      "scope": "php",
      "prefix": "eheading",
      "body": [
        "$this->add_control(",
        "    'more_options',",
        "    [",
        "        'label' => esc_html__( 'Additional Options', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::HEADING,",
        "        'separator' => 'before',",
        "    ]",
        ");"
      ],
      "description": "Adds a heading control for sections"
    },
    "e_alignment": {
      "scope": "php",
      "prefix": "ealignment",
      "body": [
        "$this->add_responsive_control(",
        "    'spinner_content_align',",
        "    [",
        "        'label' => esc_html__( 'Alignment', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::CHOOSE,",
        "        'options' => [",
        "            'left' => [",
        "                'title' => esc_html__( 'Left', 'plugin-name' ),",
        "                'icon' => 'eicon-text-align-left',",
        "            ],",
        "            'center' => [",
        "                'title' => esc_html__( 'Center', 'plugin-name' ),",
        "                'icon' => 'eicon-text-align-center',",
        "            ],",
        "            'right' => [",
        "                'title' => esc_html__( 'Right', 'plugin-name' ),",
        "                'icon' => 'eicon-text-align-right',",
        "            ],",
        "            'justify' => [",
        "                'title' => esc_html__( 'Justified', 'plugin-name' ),",
        "                'icon' => 'eicon-text-align-justify',",
        "            ],",
        "        ],",
        "        'default' => 'center',",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'text-align: {{VALUE}};',",
        "            '{{WRAPPER}} .section-title1 p' => 'text-align: {{VALUE}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds text alignment control"
    },
    "e_border_radius": {
      "scope": "php",
      "prefix": "ebradius",
      "body": [
        "$this->add_responsive_control(",
        "    'spinner_border_radius',",
        "    [",
        "        'label' => esc_html__( 'Border Radius', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds border radius control"
    },
    "e_conditions": {
      "scope": "php",
      "prefix": "econditions",
      "body": [
        "'condition' => [",
        "    'corelaw_intro_style' => ['style_one','style_two'],",
        "]"
      ],
      "description": "Adds multiple conditions for visibility"
    },
    "e_four": {
      "scope": "php",
      "prefix": "efour",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'spinner_typ',",
        "        'selector' => '{{WRAPPER}} .title',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'spinner_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'spinner_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'spinner_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds typography, color, margin, and padding controls"
    },
    "e_settings": {
      "scope": "html",
      "prefix": "esettings",
      "body": [
        "<?php echo esc_html($settings['']) ?>"
      ],
      "description": "Outputs escaped settings value"
    },
    "e_switch": {
      "scope": "php",
      "prefix": "eswitch",
      "body": [
        "$this->add_control(",
        "    'spinner_show',",
        "    [",
        "        'label' => esc_html__( 'Show Navigation', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::SWITCHER,",
        "        'label_on' => esc_html__( 'Show', 'plugin-name' ),",
        "        'label_off' => esc_html__( 'Hide', 'plugin-name' ),",
        "        'return_value' => 'yes',",
        "        'default' => 'yes',",
        "    ]",
        ");"
      ],
      "description": "Adds a switcher control (show/hide)"
    },
    "e_wp_kses": {
      "scope": "html",
      "prefix": "wpkses",
      "body": [
        "<?php echo wp_kses($settings['title'], wp_kses_allowed_html('post')) ?>"
      ],
      "description": "Outputs settings with wp_kses sanitization"
    },
    "e_esc_html": {
      "scope": "html",
      "prefix": "eeschtml",
      "body": [
        "<?php echo esc_html($settings['']) ?>"
      ],
      "description": "Outputs escaped HTML settings value"
    },
    "e_icon_direct": {
      "scope": "html",
      "prefix": "eicondirect",
      "body": [
        "<?php \\Elementor\\Icons_Manager::render_icon( $settings['icon'], [ 'aria-hidden' => 'true' ] ); ?>"
      ],
      "description": "Renders an icon from settings"
    },
    "e_image_three": {
      "scope": "php",
      "prefix": "eimagethree",
      "body": [
        "$this->add_responsive_control(",
        "    'imagestyle_height',",
        "    [",
        "        'label' => esc_html__('Height', 'plugin-name'),",
        "        'type' => Controls_Manager::SLIDER,",
        "        'size_units' => ['px', '%'],",
        "        'description' => esc_html__('Choose height in px or %', 'plugin-name'),",
        "        'selectors' => [",
        "            '{{WRAPPER}} .ft-image' => 'height: {{SIZE}}{{UNIT}};',",
        "        ],",
        "        'default' => [",
        "            'unit' => 'px',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'imagestyle_width',",
        "    [",
        "        'label' => esc_html__('Width', 'plugin-name'),",
        "        'type' => Controls_Manager::SLIDER,",
        "        'size_units' => ['px', '%'],",
        "        'description' => esc_html__('Choose width in px or %', 'plugin-name'),",
        "        'selectors' => [",
        "            '{{WRAPPER}} .ft-image' => 'width: {{SIZE}}{{UNIT}};',",
        "        ],",
        "        'default' => [",
        "            'unit' => 'px',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'imagestyle_border_radius',",
        "    [",
        "        'label' => esc_html__('Border Radius', 'plugin-name'),",
        "        'type' => Controls_Manager::DIMENSIONS,",
        "        'size_units' => ['px', '%'],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .ft-image' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds image height, width, and border radius controls"
    },
    "e_nav": {
      "scope": "php",
      "prefix": "enav",
      "body": [
        "$this->add_control(",
        "    'navigation_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .arrow-style-one .swiper-prev-arrow i, .arrow-style-one .swiper-next-arrow i' => 'color: {{VALUE}};border:1px solid {{VALUE}}',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'navigation_color_hover',",
        "    [",
        "        'label' => esc_html__('Hover Icon Color', 'plugin-name'),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .arrow-style-one .swiper-prev-arrow i:hover, .arrow-style-one .swiper-next-arrow i:hover' => 'color: {{VALUE}}',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'navigation_color_bg_hover',",
        "    [",
        "        'label' => esc_html__('Hover Background Color', 'plugin-name'),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .arrow-style-one .swiper-prev-arrow i:hover, .arrow-style-one .swiper-next-arrow i:hover' => 'background: {{VALUE}}; border:1px solid {{VALUE}}',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds navigation color and hover styles"
    },
    "e_two": {
      "scope": "php",
      "prefix": "etwo",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'spinner_typ',",
        "        'selector' => '{{WRAPPER}} .title',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'spinner_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Adds typography and color controls"
    },
    "e_subtitle": {
      "scope": "php",
      "prefix": "essubtitle",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'subtitle_typ',",
        "        'selector' => '{{WRAPPER}} .subtitle',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'subtitle_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subtitle' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'subtitle_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subtitle' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'subtitle_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subtitle' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles subtitle with typography, color, and spacing"
    },
    "e_title": {
      "scope": "php",
      "prefix": "estitle",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'title_typ',",
        "        'selector' => '{{WRAPPER}} .title',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'title_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'title_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'title_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .title' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles title with typography, color, and spacing"
    },
    "e_description": {
      "scope": "php",
      "prefix": "esdescription",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'description_typ',",
        "        'selector' => '{{WRAPPER}} .description',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'description_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .description' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'description_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .description' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'description_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .description' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles description with typography, color, and spacing"
    },
    "e_subheading": {
      "scope": "php",
      "prefix": "essubheading",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'subheading_typ',",
        "        'selector' => '{{WRAPPER}} .subheading',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'subheading_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subheading' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'subheading_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subheading' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'subheading_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .subheading' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles subheading with typography, color, and spacing"
    },
    "e_heading": {
      "scope": "php",
      "prefix": "esheading",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'heading_typ',",
        "        'selector' => '{{WRAPPER}} .heading',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'heading_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .heading' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'heading_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .heading' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'heading_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .heading' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles heading with typography, color, and spacing"
    },
    "e_headingtitle": {
      "scope": "php",
      "prefix": "esheadingtitle",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'headingtitle_typ',",
        "        'selector' => '{{WRAPPER}} .headingtitle',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'headingtitle_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .headingtitle' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'headingtitle_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .headingtitle' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'headingtitle_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .headingtitle' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles heading title with typography, color, and spacing"
    },
    "e_name": {
      "scope": "php",
      "prefix": "esname",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'name_typ',",
        "        'selector' => '{{WRAPPER}} .name',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'name_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .name' => 'color: {{VALUE}};',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'name_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .name' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'name_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .name' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles name with typography, color, and spacing"
    },
    "e_place": {
      "scope": "php",
      "prefix": "esplace",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'place_typ',",
        "        'selector' => '{{WRAPPER}} .place',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'place_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .place' => 'color: {{VALUE}};',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'place_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .place' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'place_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .place' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles place with typography, color, and spacing"
    },
    "e_designation": {
      "scope": "php",
      "prefix": "esdesignation",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'designation_typ',",
        "        'selector' => '{{WRAPPER}} .designation',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'designation_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .designation' => 'color: {{VALUE}} !important;',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'designation_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .designation' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'designation_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .designation' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}} !important;',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles designation with typography, color, and spacing"
    },
    "e_date": {
      "scope": "php",
      "prefix": "esdate",
      "body": [
        "$this->add_group_control(",
        "    Group_Control_Typography::get_type(),",
        "    [",
        "        'label' => esc_html__('Typography', 'plugin-name'),",
        "        'name' => 'date_typ',",
        "        'selector' => '{{WRAPPER}} .date',",
        "    ]",
        ");",
        "",
        "$this->add_control(",
        "    'date_color',",
        "    [",
        "        'label' => esc_html__('Color', 'plugin-name'),",
        "        'type' => Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .date' => 'color: {{VALUE}};',",
        "        ],",
        "    ]",
        ");",
        "$this->add_responsive_control(",
        "    'date_margin',",
        "    [",
        "        'label' => esc_html__( 'Margin', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%', 'em' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .date' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'date_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .date' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles date with typography, color, and spacing"
    },
    "e_card": {
      "scope": "php",
      "prefix": "escard",
      "body": [
        "$this->add_control(",
        "    'card_color',",
        "    [",
        "        'label' => esc_html__( 'Background Color', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::COLOR,",
        "        'selectors' => [",
        "            '{{WRAPPER}} .card' => 'background-color: {{VALUE}}',",
        "        ],",
        "    ]",
        ");",
        "",
        "$this->add_responsive_control(",
        "    'card_padding',",
        "    [",
        "        'label' => esc_html__( 'Padding', 'plugin-name' ),",
        "        'type' => \\Elementor\\Controls_Manager::DIMENSIONS,",
        "        'size_units' => [ 'px', '%' ],",
        "        'selectors' => [",
        "            '{{WRAPPER}} .card' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
        "        ],",
        "    ]",
        ");"
      ],
      "description": "Styles card with background and padding"
    },
    "e_show": {
      "scope": "html",
      "prefix": "eshow",
      "body": [
        "<?php if( !empty( $settings[''] ) ) : ?>",
        "    <?php echo esc_html($settings['']) ?>",
        "<?php endif ?>"
      ],
      "description": "Conditionally displays settings value"
    },
    "e_border_group": {
      "scope": "php",
      "prefix": "ebordergroup",
      "body": [
        "$this->add_group_control(",
        "    \\Elementor\\Group_Control_Border::get_type(),",
        "    [",
        "        'name' => 'banner_button_border',",
        "        'label' => esc_html__('Border', 'plugin-name'),",
        "        'selector' => '{{WRAPPER}} .btn--primary-outline',",
        "    ]",
        ");"
      ],
      "description": "Adds a border group control"
    }
  },
  "WordPress": {
    "w_title": {
      "scope": "html",
      "prefix": "wptitle",
      "body": ["<?php the_title(); ?>"],
      "description": "Outputs post/page title"
    },
    "w_content": {
      "scope": "html",
      "prefix": "wpcontent",
      "body": ["<?php the_content(); ?>"],
      "description": "Outputs post/page content"
    },
    "w_thumbnail_url": {
      "scope": "html",
      "prefix": "wpthumbnailurl",
      "body": ["<?php the_post_thumbnail_url(); ?>"],
      "description": "Outputs featured image URL"
    },
    "w_post_loop": {
      "scope": "html",
      "prefix": "wploop",
      "body": [
        "<?php if ( have_posts() ) : ?>",
        "    <?php while ( have_posts() ) : the_post(); ?>",
        "        <!-- do stuff ... -->",
        "    <?php endwhile; ?>",
        "<?php endif; ?>"
      ],
      "description": "Standard WordPress loop"
    },
    "w_post_loop_simple": {
      "scope": "html",
      "prefix": "wploopsimple",
      "body": [
        "<?php",
        "if ( have_posts() ) {",
        "    while ( have_posts() ) {",
        "        the_post();",
        "        ",
        "    }",
        "}",
        "?>"
      ],
      "description": "Simplified WordPress loop"
    },
    "w_post_if": {
      "scope": "html",
      "prefix": "wpif",
      "body": [
        "<?php if ( have_posts() ) : ?>",
        "<?php endif; ?>"
      ],
      "description": "Basic WordPress conditional check"
    },
    "w_theme_uri": {
      "scope": "html",
      "prefix": "wpthemeuri",
      "body": ["<?php echo get_template_directory_uri(); ?>/"],
      "description": "Outputs theme directory URI"
    },
    "w_acf_if": {
      "scope": "html",
      "prefix": "acfif",
      "body": [
        "<?php if( get_field('field_name') ): ?>",
        "    <p>My field value: <?php the_field('field_name'); ?></p>",
        "<?php endif; ?>"
      ],
      "description": "Conditional ACF field output"
    },
    "w_acf_foreach": {
      "scope": "html",
      "prefix": "acfforeach",
      "body": [
        "<?php",
        "    $ff = get_field('contact_us_content','option');",
        "    foreach ($ff as $fff) {",
        "        ?>",
        "        <li><i class=\"fa <?php echo $fff['icon']; ?>\"></i><?php echo $fff['info']; ?></li>",
        "        <?php",
        "    }",
        "?>"
      ],
      "description": "Loops through ACF repeater field"
    },
    "w_plugin_header": {
      "scope": "php",
      "prefix": "wppluginheader",
      "body": [
        "/**",
        " * Plugin Name:       My Basics Plugin",
        " * Plugin URI:        https://example.com/plugins/the-basics/",
        " * Description:       Handle the basics with this plugin.",
        " * Version:           1.10.3",
        " * Requires at least: 5.2",
        " * Requires PHP:      7.2",
        " * Author:            John Smith",
        " * Author URI:        https://author.example.com/",
        " * License:           GPL v2 or later",
        " * License URI:       https://www.gnu.org/licenses/gpl-2.0.html",
        " * Update URI:        https://example.com/my-plugin/",
        " * Text Domain:       my-basics-plugin",
        " * Domain Path:       /languages",
        " */"
      ],
      "description": "Plugin header comment"
    },
    "w_plugin_hooks": {
      "scope": "php",
      "prefix": "wppluginhooks",
      "body": [
        "function wordcount_activation_hook() {",
        "}",
        "register_activation_hook( __FILE__, 'wordcount_activation_hook' );",
        "",
        "function wordcount_deactivation_hook() {",
        "}",
        "register_deactivation_hook( __FILE__, 'wordcount_deactivation_hook' );"
      ],
      "description": "Plugin activation/deactivation hooks"
    }
  },
  "JavaScript": {
    "j_style": {
      "scope": "javascript",
      "prefix": "jstyle",
      "body": ["document.getElementById('demo').style.color = 'red';"],
      "description": "Changes element style (color)"
    },
    "j_inner_html": {
      "scope": "javascript",
      "prefix": "jinnerhtml",
      "body": ["document.getElementById('demo').innerHTML = 'Hello JavaScript!';"],
      "description": "Sets element innerHTML"
    },
    "j_class_html": {
      "scope": "javascript",
      "prefix": "jclasshtml",
      "body": ["document.getElementsByClassName('demo')[0].innerHTML = 'Hello JavaScript!';"],
      "description": "Sets innerHTML for first element by class"
    },
    "j_src": {
      "scope": "javascript",
      "prefix": "jsrc",
      "body": ["document.getElementById('a').src = 'on.gif';"],
      "description": "Changes image source"
    },
    "j_write": {
      "scope": "javascript",
      "prefix": "jwrite",
      "body": ["document.write();"],
      "description": "Writes content to document"
    },
    "j_query_selector": {
      "scope": "javascript",
      "prefix": "jqueryselector",
      "body": ["document.querySelector('.example').style.backgroundColor = 'red';"],
      "description": "Sets style via querySelector"
    },
    "j_event_listener": {
      "scope": "javascript",
      "prefix": "jeventlistener",
      "body": [
        "document.getElementById('myBtn').addEventListener('click', work);",
        "",
        "function work() {",
        "    document.getElementById('demo').innerHTML = Date();",
        "}"
      ],
      "description": "Adds a click event listener"
    },
    "j_console": {
      "scope": "javascript",
      "prefix": "jlog",
      "body": ["console.log($1);"],
      "description": "Logs to console"
    },
    "j_foreach": {
      "scope": "javascript",
      "prefix": "jforeach",